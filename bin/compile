#!/usr/bin/env bash

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


ENV_DIR=${3:-}
ssh_key="$(cat $ENV_DIR/SSH_KEY)"
ssh_hosts=${SSH_HOSTS:-"git@github.com"}

if [ "$ssh_key" != "" ]; then
  echo "-----> Running SSH private key setup"

  # The .ssh needs to be located in the home directory which is different to the
  # home directory of the built machine. The symlink resolves the issue.
  mkdir "$1/.ssh"
  ln -s "$1/.ssh" "$HOME/.ssh"
  echo "$ssh_key" | base64 --decode > "$HOME/.ssh/id_rsa"

  IFS=',' read -ra HOST <<< "$ssh_hosts"
  for i in "${HOST[@]}"; do
    ssh -oStrictHostKeyChecking=no -T $i 2>&1 | indent
  done

  exit 0
else
  echo "-----> No SSH private key"
fi


IFS=',' read -ra DEPLOY_KEYS <<< "$(cat $ENV_DIR/DEPLOY_KEYS)"

echo "deploy keys $DEPLOY_KEYS"
echo "num deploy keys ${#DEPLOY_KEYS[*]}"

if [ "$DEPLOY_KEYS" != "" ] && [ ${#DEPLOY_KEYS[*]} -ne 0 ] ; then
  echo "-----> Running Github deploy keys setup"

  # The .ssh needs to be located in the home directory which is different to the
  # home directory of the built machine. The symlink resolves the issue.
  mkdir "$1/.ssh"
  ln -s "$1/.ssh" "$HOME/.ssh"

  index=1
  for key in ${DEPLOY_KEYS[*]}; do
    echo "$key" | base64 --decode > "$HOME/.ssh/deploy_key_$index"
    echo "IdentityFile $HOME/.ssh/deploy_key_$index" >> "$HOME/.ssh/config"
    ((index++))
  done

  IFS=',' read -ra HOST <<< "$ssh_hosts"
  for i in "${HOST[@]}"; do
    ssh -oStrictHostKeyChecking=no -T $i 2>&1 | indent
  done

  exit 0
else
  echo "-----> No deploy keys"
fi
